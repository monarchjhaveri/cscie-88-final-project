version: "3"

services:
  changes-fetcher:
    image: "node:8.9.3"
    user: "node"
    working_dir: /home/node/app
    environment:
      - NODE_ENV=development
      - PORT=3000
    ports:
      - 3000:3000
    volumes:
      - ./changes-fetcher:/home/node/app
    networks: 
      - backend
    # command: "npm start"
    command: "npm run mock"
  db-syncer:
    image: "node:8.9.3"
    user: "node"
    working_dir: /home/node/app
    environment:
      - NODE_ENV=development
      - PORT=3001
    ports:
      - 3001:3001
    volumes:
      - ./db-syncer:/home/node/app
    networks: 
      - backend
    command: "npm start"
    depends_on: 
      - kafka
      - mongo
    links:
      - kafka
      - mongo
  flume:
    image: probablyfine/flume
    volumes:
      - ./flume:/usr/local/etc/flume
      - ./changes-fetcher/output:/usr/local/etc/changes-fetcher/output
    environment:
      - FLUME_AGENT_NAME=a1
      - FLUME_CONF_FILE=/usr/local/etc/flume/config/flume.conf
    networks:
      - backend
    links:
      - kafka
    depends_on:
      - kafka
  kafka:
    image: spotify/kafka
    ports:
      - 2181:2181
      - 9092:9092
    expose:
      - "2181"
      - "9092"
    networks:
      - backend
    environment:
      - ADVERTISED_HOST=172.17.0.1
      - ADVERTISED_PORT=9092
  mongo:
    image: mongo
    ports: 
      - 27017:27017
    volumes:
      - ./mongo/data:/data/db


  # neo4j:
  #   image: neo4j:3.3.1
  #   ports:
  #     - 7687:7687
  #     - 7474:7474
  #   volumes:
  #     - ./neo4j-data:/data
  #   networks: 
  #     - backend
  # zookeeper:
  #   image: wurstmeister/zookeeper
  #   ports:
  #     - 2181:2181
  # kafka:
  #   image: wurstmeister/kafka
  #   ports:
  #     - 9092:9092
  #   networks:
  #     - backend
  #   depends_on:
  #     - zookeeper
  #   environment:
  #     - HOSTNAME_COMMAND=route -n | awk '/UG[ \t]/{print $$2}'
  #     - KAFKA_CREATE_TOPICS=changes
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock

networks:
  backend: